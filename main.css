html {
  background-color: tan;
}

body {
  margin: 0;
}

.big-text {
  font-size: 3em;
}

blockquote {
  font-style: italic;
  font-size: 1.05rem;
  line-height: 1.35rem;
  color: #363636;
  border-left: 4px solid #939393ab;
  padding-left: 9px;
  margin: 0.5rem 1px;
}

div.quote-attribution {
  font-size: 0.95rem;
  color: #5e5e5e;
  padding: 1.25rem;
  padding-left: 0.56rem;
}

div.gallery {
  display: flex;
  flex-wrap: wrap;
  gap: .5em;
  justify-content: center;

  & > div {
    background-color: lightyellow;
    padding: 20px;
    border: .7mm dashed black;
    width: min-content;
  }
}

main {
  width: 100%;

  /* Keeps absolutely positioned children from flying out of the main element -- https://webdesign.tutsplus.com/tutorials/the-quirks-of-css-grid-and-absolute-positioning--cms-31437 */
  position: relative;

  display: grid;
  grid-template-columns:
    [full-start] minmax(1em, 1fr)
    [expansion-left] minmax(0, 8em)
    [main-start] minmax(12em, 640px) [main-end]
    minmax(0, 8em) [expansion-right]
    minmax(1em, 1fr) [full-end];

  & > figure {
    margin: 0;
    display: inherit;
    grid-template-columns: inherit;
    grid-column: full;
    background-color: #111;
    color: white;

    & > * {
      grid-column: main;
    }
  }
}

main > * {
  background-color: #ddd;
  border: .7mm dashed gray;
  padding: .5em;
  margin: 0;

  grid-column: main;
}

@media screen and (max-width: 1030px) {
  main {
    grid-template-columns:
      [full-start] minmax(1em, 1fr)
      [main-start] minmax(0, 40em) [main-end]
      minmax(1em, 1fr) [full-end];
  }
}

/* is there a better way to avoid weird properties on the border between screen */
@media screen and (min-width: 1031px) {

  main > div.aside-wrapper {
    visibility: hidden;
    height: 0;
    width: 0;
    padding: 0;
    margin: 0;
    border: none;
  }

  main > div > aside {
    /* this couples the height of the aside to whatever grid element is directly to the right */
    /* grid-column: expansion-left; */

    visibility: visible;
    background-color: white;
    padding: .5em;
    position: relative;
    left: calc(2.5rem * -4 - 1em);
    width: calc(2.5rem * 4);
  }
}
